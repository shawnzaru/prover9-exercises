============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 6421 was started by qwang on grid01,
Wed Jun 26 22:33:07 2019
The command was "prover9 -f ex17.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file ex17.in


formulas(sos).
(all x (acefinal(x) -> study(x) | brilliant(x) | lucky(x))).
(all x (makeA(x) -> acefinal(x))).
-(exists x (csmajor(x) & lucky(x))).
(all x (drinkbeer(x) -> -study(x))).
end_of_list.

formulas(goals).
(all x (csmajor(x) -> makeA(x))) -> (all x (csmajor(x) -> (drinkbeer(x) -> brilliant(x)))).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (acefinal(x) -> study(x) | brilliant(x) | lucky(x))) # label(non_clause).  [assumption].
2 (all x (makeA(x) -> acefinal(x))) # label(non_clause).  [assumption].
3 -(exists x (csmajor(x) & lucky(x))) # label(non_clause).  [assumption].
4 (all x (drinkbeer(x) -> -study(x))) # label(non_clause).  [assumption].
5 (all x (csmajor(x) -> makeA(x))) -> (all x (csmajor(x) -> (drinkbeer(x) -> brilliant(x)))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-acefinal(x) | study(x) | brilliant(x) | lucky(x).  [clausify(1)].
-makeA(x) | acefinal(x).  [clausify(2)].
-csmajor(x) | -lucky(x).  [clausify(3)].
-drinkbeer(x) | -study(x).  [clausify(4)].
-csmajor(x) | makeA(x).  [deny(5)].
csmajor(c1).  [deny(5)].
drinkbeer(c1).  [deny(5)].
-brilliant(c1).  [deny(5)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating acefinal/1
6 -makeA(x) | acefinal(x).  [clausify(2)].
7 -acefinal(x) | study(x) | brilliant(x) | lucky(x).  [clausify(1)].
Derived: -makeA(x) | study(x) | brilliant(x) | lucky(x).  [resolve(6,b,7,a)].

Eliminating csmajor/1
8 csmajor(c1).  [deny(5)].
9 -csmajor(x) | -lucky(x).  [clausify(3)].
10 -csmajor(x) | makeA(x).  [deny(5)].
Derived: -lucky(c1).  [resolve(8,a,9,a)].
Derived: makeA(c1).  [resolve(8,a,10,a)].

Eliminating drinkbeer/1
11 drinkbeer(c1).  [deny(5)].
12 -drinkbeer(x) | -study(x).  [clausify(4)].
Derived: -study(c1).  [resolve(11,a,12,a)].

Eliminating brilliant/1
13 -makeA(x) | study(x) | brilliant(x) | lucky(x).  [resolve(6,b,7,a)].
14 -brilliant(c1).  [deny(5)].
Derived: -makeA(c1) | study(c1) | lucky(c1).  [resolve(13,c,14,a)].

Eliminating lucky/1
15 -makeA(c1) | study(c1) | lucky(c1).  [resolve(13,c,14,a)].
16 -lucky(c1).  [resolve(8,a,9,a)].
Derived: -makeA(c1) | study(c1).  [resolve(15,c,16,a)].

Eliminating makeA/1
17 -makeA(c1) | study(c1).  [resolve(15,c,16,a)].
18 makeA(c1).  [resolve(8,a,10,a)].
Derived: study(c1).  [resolve(17,a,18,a)].

Eliminating study/1
19 study(c1).  [resolve(17,a,18,a)].
20 -study(c1).  [resolve(11,a,12,a)].
Derived: $F.  [resolve(19,a,20,a)].

============================== end predicate elimination =============

Auto_denials:  (no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ ]).
Function symbol precedence:  function_order([ ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(neg_binary_resolution).  % (HNE depth_diff=0)
  % clear(ordered_res).  % (HNE depth_diff=0)
  % set(ur_resolution).  % (HNE depth_diff=0)
    % set(ur_resolution) -> set(pos_ur_resolution).
    % set(ur_resolution) -> set(neg_ur_resolution).

Auto_process settings:  (no changes).


============================== PROOF =================================

% Proof 1 at 0.00 (+ 0.00) seconds.
% Length of proof is 21.
% Level of proof is 6.
% Maximum clause weight is 0.000.
% Given clauses 0.

1 (all x (acefinal(x) -> study(x) | brilliant(x) | lucky(x))) # label(non_clause).  [assumption].
2 (all x (makeA(x) -> acefinal(x))) # label(non_clause).  [assumption].
3 -(exists x (csmajor(x) & lucky(x))) # label(non_clause).  [assumption].
4 (all x (drinkbeer(x) -> -study(x))) # label(non_clause).  [assumption].
5 (all x (csmajor(x) -> makeA(x))) -> (all x (csmajor(x) -> (drinkbeer(x) -> brilliant(x)))) # label(non_clause) # label(goal).  [goal].
6 -makeA(x) | acefinal(x).  [clausify(2)].
7 -acefinal(x) | study(x) | brilliant(x) | lucky(x).  [clausify(1)].
8 csmajor(c1).  [deny(5)].
9 -csmajor(x) | -lucky(x).  [clausify(3)].
10 -csmajor(x) | makeA(x).  [deny(5)].
11 drinkbeer(c1).  [deny(5)].
12 -drinkbeer(x) | -study(x).  [clausify(4)].
13 -makeA(x) | study(x) | brilliant(x) | lucky(x).  [resolve(6,b,7,a)].
14 -brilliant(c1).  [deny(5)].
15 -makeA(c1) | study(c1) | lucky(c1).  [resolve(13,c,14,a)].
16 -lucky(c1).  [resolve(8,a,9,a)].
17 -makeA(c1) | study(c1).  [resolve(15,c,16,a)].
18 makeA(c1).  [resolve(8,a,10,a)].
19 study(c1).  [resolve(17,a,18,a)].
20 -study(c1).  [resolve(11,a,12,a)].
21 $F.  [resolve(19,a,20,a)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=1. Kept=0. proofs=1.
Usable=0. Sos=0. Demods=0. Limbo=0, Disabled=16. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=0. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=0. Nonunit_bsub_feature_tests=0.
Megabytes=0.04.
User_CPU=0.00, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 6421 exit (max_proofs) Wed Jun 26 22:33:07 2019
