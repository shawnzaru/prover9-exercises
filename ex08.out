============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 6412 was started by qwang on grid01,
Wed Jun 26 22:33:07 2019
The command was "prover9 -f ex08.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file ex08.in


formulas(sos).
(all x (child(x) -> (all y (givepresent(y,x) -> love(x,y))))).
(all x (child(x) -> (travel(santa,xmas) -> givepresent(santa,x)))).
foggy(xmas).
(all x (foggy(x) -> (all y (haslight(y) -> travel(y,x))))).
(all x (hasdeer(x) -> haslight(x))).
end_of_list.

formulas(goals).
hasdeer(santa) -> (all x (child(x) -> love(x,santa))).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (child(x) -> (all y (givepresent(y,x) -> love(x,y))))) # label(non_clause).  [assumption].
2 (all x (child(x) -> (travel(santa,xmas) -> givepresent(santa,x)))) # label(non_clause).  [assumption].
3 (all x (foggy(x) -> (all y (haslight(y) -> travel(y,x))))) # label(non_clause).  [assumption].
4 (all x (hasdeer(x) -> haslight(x))) # label(non_clause).  [assumption].
5 hasdeer(santa) -> (all x (child(x) -> love(x,santa))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-child(x) | -givepresent(y,x) | love(x,y).  [clausify(1)].
-child(x) | -travel(santa,y) | givepresent(santa,x).  [clausify(2)].
foggy(x).  [assumption].
-foggy(x) | -haslight(y) | travel(y,x).  [clausify(3)].
-hasdeer(x) | haslight(x).  [clausify(4)].
hasdeer(santa).  [deny(5)].
child(c1).  [deny(5)].
-love(c1,santa).  [deny(5)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating child/1
6 child(c1).  [deny(5)].
7 -child(x) | -givepresent(y,x) | love(x,y).  [clausify(1)].
8 -child(x) | -travel(santa,y) | givepresent(santa,x).  [clausify(2)].
Derived: -givepresent(x,c1) | love(c1,x).  [resolve(6,a,7,a)].
Derived: -travel(santa,x) | givepresent(santa,c1).  [resolve(6,a,8,a)].

Eliminating foggy/1
9 -foggy(x) | -haslight(y) | travel(y,x).  [clausify(3)].
10 foggy(x).  [assumption].
Derived: -haslight(x) | travel(x,y).  [resolve(9,a,10,a)].

Eliminating hasdeer/1
11 hasdeer(santa).  [deny(5)].
12 -hasdeer(x) | haslight(x).  [clausify(4)].
Derived: haslight(santa).  [resolve(11,a,12,a)].

Eliminating love/2
13 -givepresent(x,c1) | love(c1,x).  [resolve(6,a,7,a)].
14 -love(c1,santa).  [deny(5)].
Derived: -givepresent(santa,c1).  [resolve(13,b,14,a)].

Eliminating travel/2
15 -haslight(x) | travel(x,y).  [resolve(9,a,10,a)].
16 -travel(santa,x) | givepresent(santa,c1).  [resolve(6,a,8,a)].
Derived: -haslight(santa) | givepresent(santa,c1).  [resolve(15,b,16,a)].

Eliminating haslight/1
17 -haslight(santa) | givepresent(santa,c1).  [resolve(15,b,16,a)].
18 haslight(santa).  [resolve(11,a,12,a)].
Derived: givepresent(santa,c1).  [resolve(17,a,18,a)].

Eliminating givepresent/2
19 givepresent(santa,c1).  [resolve(17,a,18,a)].
20 -givepresent(santa,c1).  [resolve(13,b,14,a)].
Derived: $F.  [resolve(19,a,20,a)].

============================== end predicate elimination =============

Auto_denials:  (no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ ]).
Function symbol precedence:  function_order([ ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(neg_binary_resolution).  % (HNE depth_diff=0)
  % clear(ordered_res).  % (HNE depth_diff=0)
  % set(ur_resolution).  % (HNE depth_diff=0)
    % set(ur_resolution) -> set(pos_ur_resolution).
    % set(ur_resolution) -> set(neg_ur_resolution).

Auto_process settings:  (no changes).


============================== PROOF =================================

% Proof 1 at 0.00 (+ 0.00) seconds.
% Length of proof is 21.
% Level of proof is 5.
% Maximum clause weight is 0.000.
% Given clauses 0.

1 (all x (child(x) -> (all y (givepresent(y,x) -> love(x,y))))) # label(non_clause).  [assumption].
2 (all x (child(x) -> (travel(santa,xmas) -> givepresent(santa,x)))) # label(non_clause).  [assumption].
3 (all x (foggy(x) -> (all y (haslight(y) -> travel(y,x))))) # label(non_clause).  [assumption].
4 (all x (hasdeer(x) -> haslight(x))) # label(non_clause).  [assumption].
5 hasdeer(santa) -> (all x (child(x) -> love(x,santa))) # label(non_clause) # label(goal).  [goal].
6 child(c1).  [deny(5)].
7 -child(x) | -givepresent(y,x) | love(x,y).  [clausify(1)].
8 -child(x) | -travel(santa,y) | givepresent(santa,x).  [clausify(2)].
9 -foggy(x) | -haslight(y) | travel(y,x).  [clausify(3)].
10 foggy(x).  [assumption].
11 hasdeer(santa).  [deny(5)].
12 -hasdeer(x) | haslight(x).  [clausify(4)].
13 -givepresent(x,c1) | love(c1,x).  [resolve(6,a,7,a)].
14 -love(c1,santa).  [deny(5)].
15 -haslight(x) | travel(x,y).  [resolve(9,a,10,a)].
16 -travel(santa,x) | givepresent(santa,c1).  [resolve(6,a,8,a)].
17 -haslight(santa) | givepresent(santa,c1).  [resolve(15,b,16,a)].
18 haslight(santa).  [resolve(11,a,12,a)].
19 givepresent(santa,c1).  [resolve(17,a,18,a)].
20 -givepresent(santa,c1).  [resolve(13,b,14,a)].
21 $F.  [resolve(19,a,20,a)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=1. Kept=0. proofs=1.
Usable=0. Sos=0. Demods=0. Limbo=0, Disabled=16. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=0. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=0. Nonunit_bsub_feature_tests=0.
Megabytes=0.04.
User_CPU=0.00, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 6412 exit (max_proofs) Wed Jun 26 22:33:07 2019
